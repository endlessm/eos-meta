#!/bin/bash -e

if [ ! -L /ostree ]; then
  echo "Not running on an ostree system"
  exit 1
fi

SECURE_BOOT_FILE=/proc/sys/kernel/secure_boot
if [ -e ${SECURE_BOOT_FILE} ] && [ $(cat ${SECURE_BOOT_FILE}) -eq 1 ]; then
  echo "Error: Secure boot needs to be disabled before running $0" >&2
  exit 1
fi

# Set the metrics system to use the dev environment
echo "Configuring Metrics System for Dev"
source eos-select-metrics-env 'dev'

# Disable upgrade timer
systemctl stop eos-autoupdater.timer
systemctl disable eos-autoupdater.timer

# Unsure if these are necessary after stopping the timer, but better to be
# sure.
systemctl stop eos-autoupdater.service

# 4th element in mountinfo is the "root" within a mounted filesystem, 5th is
# where it's mounted. Hence dig out where our root is coming from, so we're
# always using the _current_ root filesystem instead of the last updated
# version
OSTREE_DEPLOY_CURRENT=$(cat /proc/self/mountinfo | \
  egrep '([^ ]* ){4}/ ' | cut -d ' ' -f 4)

if [ -d /ostree/deploy/master ]; then
  echo "Detected master OSTree deploy"
  OSTREE_DEPLOY=/ostree/deploy/master
elif [ -d /ostree/deploy/dev ]; then
  echo "Detected dev OSTree deploy"
  OSTREE_DEPLOY=/ostree/deploy/dev
elif [ -d /ostree/deploy/eos ]; then
  echo "Detected eos OSTree deploy"
  OSTREE_DEPLOY=/ostree/deploy/eos
else
  echo "Failed to find OSTree deploy - exiting"
  exit 1
fi

# As now the real homedir will be /home and not /sysroot/home, update passwd accordingly
echo "Updating HOME directory"
sed -i "s#/sysroot/home#/home#g" /etc/passwd* /etc/adduser.conf /etc/default/useradd

# Directories in the deployment root to merge to /sysroot
ROOT_DIRS=(bin etc lib sbin usr opt var endless)
if [ -d ${OSTREE_DEPLOY_CURRENT}/lib64 ]; then
  ROOT_DIRS+=(lib64)
fi

echo "Hardlinking files from $OSTREE_DEPLOY_CURRENT, this may take a while"

# Copy the system directories to the real filesystems /
for dir in ${ROOT_DIRS[@]}; do
  cp -paxl ${OSTREE_DEPLOY_CURRENT}/${dir} /sysroot
done

# Overlay the /var as deployed on the systems /var
echo "Overlaying deployed /var FROM ${OSTREE_DEPLOY}"
cp -paxl ${OSTREE_DEPLOY}/var /sysroot

# To properly share objects with ostree, /var/lib/flatpak is a symlink
# to /sysroot/flatpak. Since /sysroot will become /, point the symlink
# to /flatpak instead.
if [ "$(readlink -f /sysroot/var/lib/flatpak)" = /sysroot/flatpak ]; then
  ln -sfT /flatpak /sysroot/var/lib/flatpak
fi

# Break any unwanted hard links. We assume that only empty files with
# multiple links are unwanted and were created by ostree. Otherwise,
# assume that the hard links are desired and were created by a package.
# We look for files with greater than 2 links since we just hardlinked
# everything to the ostree deployment, so by definition all files will
# have at least 2 links.
for dir in ${ROOT_DIRS[@]}; do
  find /sysroot/${dir} -xdev -type f -size 0 -links +2 \
       -exec eos-break-links '{}' '+'
done

# homedirs are /sysroot/home/<user> for some odd reason so point /sysroot/home 
# to the real /home.
# Note that making /syroot a symlink to / fails as dracut will 
# pick that up when re-generating the initramfs and blow up
mkdir -p /sysroot/sysroot
ln -s /home /sysroot/sysroot/

# Merge the passwd and group files from /lib back into the corresponding
# files in /etc so that debian maintainer scripts can update them as
# they expect.
eos-convert-passwd --root=/sysroot

# Make the systemd journal persistent
mkdir -p /var/log/journal

# Enable systemd coredumps storage
echo "Enabling systemd coredumps processing and storage"
echo "kernel.core_pattern=|/lib/systemd/systemd-coredump %p %u %g %s %t %c %e" > /etc/sysctl.d/50-coredump.conf

# Put the kernels/initramfs in the expected place by Debian
cp -pax ${OSTREE_DEPLOY_CURRENT}/boot/{vmlinuz,initramfs}*  /boot
rename 's/-\w*$//g,s/initramfs/initrd\.img/g' /boot/{vmlinuz,init}*

if [ -L /boot/uEnv.txt ] ; then 
  # Running on ARM
  ln -r -s /boot/vmlinuz* /boot/vmlinuz
  ln -r -s /boot/initrd* /boot/initrd.img

  sed -i \
    -e 's:^kernel_image=.*:kernel_image=/vmlinuz:' \
    -e 's:^ramdisk_image=.*:ramdisk_image=/initrd.img:' \
    -e 's/ostree=[^ ]*//g' \
    /boot/uEnv.txt
else
  O=$(grep options /boot/loader/entries/*.conf | head -n1 | cut -d ' ' -f 2-)
  echo GRUB_CMDLINE_LINUX_DEFAULT=\"${O} \" | sed 's/ostree=[^ ]*//g' \
    >> /etc/default/grub
  update-grub
fi

echo "All done, please reboot"
